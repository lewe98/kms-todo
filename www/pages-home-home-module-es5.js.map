{"version":3,"sources":["webpack:///src/app/pages/home/home.page.html","webpack:///src/app/pages/home/home-routing.module.ts","webpack:///src/app/pages/home/home.module.ts","webpack:///src/app/pages/home/home.page.scss","webpack:///src/app/pages/home/home.page.ts"],"names":["routes","path","component","HomePageRoutingModule","imports","forChild","exports","HomePageModule","declarations","HomePage","modalCtrl","loadingController","popoverController","todoService","authService","loading","create","message","duration","priority","localStorage","getItem","isLoggedIn","refreshCategories","findById","subscribe","u","user","refreshTodos","cssClass","swipeToClose","componentProps","todo","autor","modal","present","edit","logOut","setTimeout","onDidDismiss","search","getInputElement","input","searchValue","value","filteredAufgabenArray","todos","filter","t","titel","toLowerCase","includes","beschreibung","kategorie","name","catname","ev","toto","event","translucent","popover","task","selector","template"],"mappings":"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","file":"pages-home-home-module-es5.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Aufgaben Manager KMS</ion-title>\\n        <ion-button *ngIf=\\\"authService.isLoggedIn\\\" slot=\\\"end\\\" color=\\\"warning\\\" (click)=\\\"logout()\\\">Logout</ion-button>\\n        <ion-button *ngIf=\\\"!authService.isLoggedIn\\\" slot=\\\"end\\\" (click)=\\\"authService.presentPopoverLogin($event)\\\">Login\\n        </ion-button>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-item>\\n        <ion-input (ionInput)=\\\"doSearch()\\\"\\n                   clearOnEdit=\\\"false\\\"\\n                   color=\\\"warning\\\"\\n                   inputmode=\\\"text\\\"\\n                   placeholder=\\\"ToDo suchen...\\\" required=\\\"true\\\">\\n        </ion-input>\\n\\n        <ion-icon *ngIf=\\\"todoService.filteredAufgabenArray.length < todoService.todos.length\\\"\\n                  name=\\\"close-outline\\\"\\n                  (click)=\\\"clear()\\\"\\n                  color=\\\"warning\\\"\\n                  slot=\\\"end\\\">\\n        </ion-icon>\\n        <ion-icon name=\\\"search-outline\\\"\\n                  color=\\\"warning\\\"\\n                  slot=\\\"end\\\">\\n        </ion-icon>\\n\\n    </ion-item>\\n    <ion-item>\\n        <ion-label>Liste nach Kategorie filtern</ion-label>\\n        <ion-select interface=\\\"popover\\\" cancelText=\\\"Dismiss\\\" [(ngModel)]=\\\"this.todoService.filterCat\\\" placeholder=\\\"Filter wÃ¤hlen...\\\" (ionChange)=\\\"this.filterByCat(todoService.filterCat)\\\">\\n            <ion-select-option *ngFor=\\\"let cat of todoService.categories\\\" [value]=\\\"cat.name\\\">{{cat.name}}</ion-select-option>\\n            <ion-select-option [value]=\\\"\\\">kein Filter</ion-select-option>\\n        </ion-select>\\n    </ion-item>\\n    <ion-list>\\n        <ion-list-header *ngIf=\\\"!authService.isLoggedIn\\\">\\n            ToDos\\n        </ion-list-header>\\n\\n        <ion-list-header *ngIf=\\\"authService.isLoggedIn\\\">\\n            ToDos von {{authService.user.nutzername}}\\n        </ion-list-header>\\n\\n        <div *ngIf=\\\"todoService.filteredAufgabenArray.length > 0 else empty\\\">\\n            <ion-item-sliding *ngFor=\\\"let todo of todoService.filteredAufgabenArray\\\">\\n                <ion-item [disabled]=\\\"todo.erledigt\\\">\\n                    <!--<ion-avatar slot=\\\"start\\\">\\n                        <img alt=\\\"{{todo.autor.nutzername}}\\\" src=\\\"{{todo.autor.profilbild}}\\\">\\n                    </ion-avatar>-->\\n\\n                    <ion-label>\\n                        <h2 [class.done]=\\\"todo.erledigt\\\">{{todo.titel}}</h2>\\n                        <!--                        <h4>{{todo.kategorie}}</h4>-->\\n                        <p>{{todo.beschreibung}}</p>\\n                    </ion-label>\\n\\n                    <ion-badge *ngIf=\\\"todo.kategorie.name != ''\\\"\\n                               (click)=\\\"presentPopoverCategory($event, todo)\\\">{{todo.kategorie.name}}</ion-badge>\\n\\n                    <ion-note slot=\\\"end\\\">\\n                        <!-- {{todo.autor.nutzername}} -->\\n                        {{todo.zeit}} Uhr\\n                    </ion-note>\\n\\n                    <ion-badge slot=\\\"start\\\" color=\\\"none\\\" (click)=\\\"presentPopoverPriority($event, todo)\\\">\\n                        <img [src]=priority[todo.prioritaet] alt=\\\"prio icon\\\">\\n                    </ion-badge>\\n                </ion-item>\\n\\n                <ion-item-options side=\\\"start\\\">\\n\\n                    <ion-item-option *ngIf=\\\"!todo.erledigt\\\" (click)=\\\"todoService.done(todo)\\\" color=\\\"success\\\">\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n                    </ion-item-option>\\n\\n                    <ion-item-option *ngIf=\\\"todo.erledigt\\\" (click)=\\\"todoService.notDone(todo)\\\" color=\\\"warning\\\">\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n                    </ion-item-option>\\n                </ion-item-options>\\n\\n                <ion-item-options side=\\\"end\\\">\\n                    <ion-item-option (click)=\\\"editModal(todo)\\\" color=\\\"warning\\\">\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"create-outline\\\"></ion-icon>\\n                    </ion-item-option>\\n\\n                    <ion-item-option (click)=\\\"todoService.delete(todo)\\\" color=\\\"danger\\\">\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n                    </ion-item-option>\\n                </ion-item-options>\\n            </ion-item-sliding>\\n        </div>\\n\\n    </ion-list>\\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button color=\\\"warning\\\" (click)=\\\"addModal()\\\">\\n            <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n        </ion-fab-button>\\n    </ion-fab>\\n\\n</ion-content>\\n\\n<ng-template #empty>\\n    <ion-item-sliding>\\n        <ion-item>\\n            <p>Hier klicken, um ToDo hinzuzufÃ¼gen.</p>\\n            <ion-button (click)=\\\"addModal()\\\" slot=\\\"end\\\">\\n                <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ion-item-sliding>\\n</ng-template>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","export default \".modal .modal-wrapper {\\n  background: #222;\\n}\\n\\nion-list-header {\\n  background-color: yellow;\\n  color: black;\\n}\\n\\n.done {\\n  text-decoration: line-through;\\n}\\n\\nimg {\\n  height: 15px;\\n  width: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0FBQ0Y7O0FBRUE7RUFDRSx3QkFBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLDZCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0EsV0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaG9tZS9ob21lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbCAubW9kYWwtd3JhcHBlciB7XG4gIGJhY2tncm91bmQ6ICMyMjI7XG59XG5cbmlvbi1saXN0LWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4uZG9uZSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xufVxuXG5pbWcge1xuICBoZWlnaHQ6IDE1cHg7XG4gIHdpZHRoOiAxNXB4O1xufVxuIl19 */\";","import {Component, ViewChild} from '@angular/core';\nimport {IonInput, LoadingController, ModalController, PopoverController, ViewDidEnter} from '@ionic/angular';\nimport {AddPage} from '../add/add.page';\nimport {AuthService} from '../../../services/auth/auth.service';\nimport {TodoService} from '../../../services/todo/todo.service';\nimport {Todo} from '../../../models/todo';\nimport {PopoverPriorityComponent} from '../../components/popover-priority/popover-priority.component';\nimport {PopoverCategoryPage} from '../../components/popover-category/popover-category.page';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.page.html',\n    styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements ViewDidEnter {\n    loading = this.loadingController.create({\n        message: 'Bitte warten...',\n        duration: 1500\n    });\n    priority = [\n        '../../../assets/prio/highest-prio.svg',\n        '../../../assets/prio/high-prio.svg',\n        '../../../assets/prio/medium.svg',\n        '../../../assets/prio/low-prio.svg',\n        '../../../assets/prio/lowest-prio.svg'];\n    @ViewChild(IonInput) search: IonInput;\n\n    constructor(private modalCtrl: ModalController,\n                public loadingController: LoadingController,\n                public popoverController: PopoverController,\n                public todoService: TodoService,\n                public authService: AuthService) {\n        if (!localStorage.getItem('userID')) {\n            this.authService.isLoggedIn = false;\n            this.todoService.refreshCategories();\n            // this.router.navigate(['/login']);\n        } else {\n            authService.findById(localStorage.getItem('userID'))\n                .subscribe(u => {\n                    authService.user = u;\n                    this.authService.isLoggedIn = true;\n                    this.todoService.refreshTodos();\n                    this.todoService.refreshCategories();\n                });\n        }\n    }\n\n    async addModal() {\n        const modal = await this.modalCtrl.create({\n            component: AddPage,\n            cssClass: 'modal',\n            swipeToClose: true,\n            componentProps: {\n                todo: new Todo(),\n                autor: this.authService.user\n            }\n        });\n        return await modal.present();\n    }\n\n    async editModal(todo: Todo) {\n        const modal = await this.modalCtrl.create({\n            component: AddPage,\n            cssClass: 'modal',\n            swipeToClose: true,\n            componentProps: {\n                edit: true,\n                todo\n            }\n        });\n        return await modal.present();\n    }\n\n    async logout() {\n        await (await this.loading).present();\n        await this.authService.logOut();\n        setTimeout(() => {\n            this.todoService.refreshTodos();\n        }, 1000);\n        await (await this.loading).onDidDismiss();\n    }\n\n    async doSearch() {\n        const input = await this.search.getInputElement();\n        const searchValue = input.value;\n        this.todoService.filteredAufgabenArray = this.todoService.todos.filter(t => {\n            return t.titel.toLowerCase().includes(searchValue.toLowerCase()) ||\n                t.beschreibung.toLowerCase().includes(searchValue.toLowerCase()) ||\n                t.kategorie.name.toLowerCase().includes(searchValue.toLowerCase());\n        });\n    }\n\n    async filterByCat(catname: string) {\n        if (catname === 'no filter') {\n            this.todoService.filteredAufgabenArray = this.todoService.todos;\n        } else {\n            this.todoService.filteredAufgabenArray = this.todoService.todos.filter(t => {\n                return t.kategorie.name === catname;\n            });\n        }\n    }\n\n    async presentPopoverPriority(ev: any, toto: Todo) {\n        const popover = await this.popoverController.create({\n            component: PopoverPriorityComponent,\n            event: ev,\n            translucent: true,\n            componentProps: {\n                toto\n            }\n        });\n        return await popover.present();\n    }\n\n\n    /**\n     * Method that calls the popover to display the elements of categories array\n     * to select an alternative category for a task\n     * @param ev that occurs when popover is called upon\n     * @param task is an instance of the todo class\n     * that is passed to the popover page\n     */\n    async presentPopoverCategory(ev: any, task: Todo) {\n        const popover = await this.popoverController.create({\n            component: PopoverCategoryPage,\n            event: ev,\n            translucent: true,\n            componentProps: {\n                task\n            }\n        });\n        return await popover.present();\n    }\n\n    clear() {\n        this.search.value = '';\n        this.todoService.filteredAufgabenArray = this.todoService.todos;\n    }\n\n    ionViewDidEnter() {\n        this.search.value = '';\n    }\n}\n"]}