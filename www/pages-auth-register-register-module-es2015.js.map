{"version":3,"sources":["./src/app/pages/auth/register/register.page.html","./src/app/pages/auth/register/register-routing.module.ts","./src/app/pages/auth/register/register.module.ts","./src/app/pages/auth/register/register.page.scss","./src/app/pages/auth/register/register.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,siCAAu+B,0BAA0B,yoBAAyoB,qBAAqB,upBAAupB,wBAAwB,2rBAA2rB,+BAA+B,qYAAqY,E;;;;;;;;;;;;;;;;;;;ACAn5G;AACc;AAER;AAE/C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;IAMW,yBAAyB,SAAzB,yBAAyB;CAAG;AAA5B,yBAAyB;IAJrC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,yBAAyB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBG;AACM;AACF;AAEA;AAEyB;AAEvB;IAWlC,kBAAkB,SAAlB,kBAAkB;CAAG;AAArB,kBAAkB;IAT9B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,kFAAyB;SAC1B;QACD,YAAY,EAAE,CAAC,2DAAY,CAAC;KAC7B,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;ACnB/B;AAAe,6GAA8C,2JAA2J,E;;;;;;;;;;;;;;;;;;;;;ACArK;AAEgB;AAC5B;AAC4B;AACwB;IAO9E,YAAY,SAAZ,YAAY;IAYrB,YAAoB,WAAwB,EACxB,MAAc,EACd,WAAwB,EACxB,cAAqC;QAHrC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAuB;QAPzD,WAAM,GAAwB,IAAI,GAAG,EAAkB,CAAC;QAQpD,IAAI,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;YAChC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;SACnC;IACL,CAAC;IAED;;;;;;OAMG;IACG,MAAM,CAAC,UAAU,EAAE,KAAa,EAAE,QAAgB;;YACpD,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YAEpB,IAAI,CAAC,UAAU,EAAE;gBACb,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,EAAE,kCAAkC,CAAC,CAAC;aACrE;YACD,IAAI,CAAC,KAAK,EAAE;gBACR,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,6BAA6B,CAAC,CAAC;aAC3D;YACD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;gBAC3B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,4BAA4B,CAAC,CAAC;aAC1D;YACD,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBACrB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,8CAA8C,CAAC,CAAC;aAC/E;YACD,IAAI,CAAC,QAAQ,EAAE;gBACX,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,gCAAgC,CAAC,CAAC;aACjE;YACD,IAAI,QAAQ,KAAK,IAAI,CAAC,eAAe,EAAE;gBACnC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,iBAAiB,EAAE,mCAAmC,CAAC,CAAC;aAC3E;YAED,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,EAAE;gBACxB,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE;oBAC5B,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBACnC,MAAM,IAAI,CAAC,WAAW,CAAC,uBAAuB,EAAE,CAAC;qBACpD;oBACD,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC;oBACnC,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;iBACnC;gBACD,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAE,CAAC,CAAC,CAAC;gBACrE,MAAM,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,+FAAqB,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAC1H;QACL,CAAC;KAAA;IAED;;;;OAIG;IACH,YAAY,CAAC,KAAa;QACtB,OAAO,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED;;OAEG;IACH,eAAe;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACH,eAAe;QACX,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC;CAEJ;;YAhGO,uEAAW;YACX,sDAAM;YACN,uEAAW;YACX,+FAAqB;;;4BAiBxB,uDAAS,SAAC,OAAO;;AAVT,YAAY;IALxB,+DAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,qOAAmC;;KAEtC,CAAC;GACW,YAAY,CAsFxB;AAtFwB","file":"pages-auth-register-register-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Registrierung</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div>\\n        <ng-container>\\n            <ion-list>\\n\\n                <ion-item>\\n                    <ion-label>Nutzername*</ion-label>\\n                    <ion-input #focus\\n                               class=\\\"ion-text-end formControl\\\"\\n                               placeholder=\\\"Nutzername...\\\"\\n                               clearOnEdit=\\\"false\\\"\\n                               [(ngModel)]=\\\"nutzername\\\"\\n                               type=\\\"text\\\"\\n                               required>\\n                    </ion-input>\\n                </ion-item>\\n\\n                <p class=\\\"ion-text-end ion-padding-end\\\" style=\\\"color:var(--ion-color-danger)\\\"\\n                   *ngIf=\\\"errors.get('nutzername')\\\">\\n                    {{errors.get('nutzername')}} </p>\\n\\n\\n                <ion-item>\\n                    <ion-label>E-Mail*</ion-label>\\n                    <ion-input class=\\\"ion-text-end formControl\\\"\\n                               placeholder=\\\"Email...\\\"\\n                               clearOnEdit=\\\"false\\\"\\n                               [(ngModel)]=\\\"email\\\"\\n                               type=\\\"email\\\"\\n                               required>\\n                    </ion-input>\\n                </ion-item>\\n\\n                <p class=\\\"ion-text-end ion-padding-end\\\" style=\\\"color:var(--ion-color-danger)\\\"\\n                   *ngIf=\\\"errors.get('email')\\\">\\n                    {{errors.get('email')}} </p>\\n\\n\\n                <ion-item>\\n                    <ion-label>Passwort*</ion-label>\\n                    <ion-input class=\\\"ion-text-end formControl\\\"\\n                               placeholder=\\\"Passwort...\\\"\\n                               clearOnEdit=\\\"false\\\"\\n                               [(ngModel)]=\\\"passwort\\\"\\n                               type=\\\"password\\\"\\n                               required>\\n                    </ion-input>\\n                </ion-item>\\n\\n                <p class=\\\"ion-text-end ion-padding-end\\\" style=\\\"color:var(--ion-color-danger)\\\"\\n                   *ngIf=\\\"errors.get('passwort')\\\">\\n                    {{errors.get('passwort')}} </p>\\n\\n\\n                <ion-item>\\n                    <ion-label>Passwort bestätigen*</ion-label>\\n                    <ion-input class=\\\"ion-text-end formControl\\\"\\n                               placeholder=\\\"Passwort bestätigen...\\\"\\n                               clearOnEdit=\\\"false\\\"\\n                               [(ngModel)]=\\\"passwortConfirm\\\"\\n                               type=\\\"password\\\"\\n                               required>\\n                    </ion-input>\\n                </ion-item>\\n\\n                <p class=\\\"ion-text-end ion-padding-end\\\" style=\\\"color:var(--ion-color-danger)\\\"\\n                   *ngIf=\\\"errors.get('passwortConfirm')\\\">\\n                    {{errors.get('passwortConfirm')}} </p>\\n            </ion-list>\\n\\n            <ion-note class=\\\"margin\\\">*Pflichtfeld</ion-note>\\n\\n        </ng-container>\\n\\n\\n        <ion-button [title]=\\\"'Registrieren'\\\" (click)=\\\"signUp(nutzername, email, passwort)\\\">Registrieren</ion-button>\\n\\n        <a class=\\\"margin kuis\\\" (click)=\\\"redirectToLogin()\\\">Bereits registriert? Hier einloggen!</a>\\n\\n    </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2F1dGgvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIn0= */\";","import {Component, ViewChild} from '@angular/core';\nimport {IonInput, ViewDidEnter} from '@ionic/angular';\nimport {AuthService} from '../../../../services/auth/auth.service';\nimport {Router} from '@angular/router';\nimport {TodoService} from '../../../../services/todo/todo.service';\nimport {StorageServiceService} from '../../../../services/storage/storage-service.service';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.page.html',\n    styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements ViewDidEnter {\n\n    nutzername: string;\n    email: string;\n    passwort: string;\n    passwortConfirm: string;\n    isOnline: boolean;\n\n    errors: Map<string, string> = new Map<string, string>();\n\n    @ViewChild('focus') private nutzernameRef: IonInput;\n\n    constructor(private authService: AuthService,\n                private router: Router,\n                private todoService: TodoService,\n                private storageService: StorageServiceService) {\n        if (localStorage.getItem('userID')) {\n            this.router.navigate(['/home']);\n        }\n    }\n\n    /**\n     * Method to transmit the data of a new User to the Database.\n     *\n     * @param nutzername is the User nickname.\n     * @param email is the E-Mail of the User.\n     * @param passwort is the password of the user.\n     */\n    async signUp(nutzername, email: string, passwort: string) {\n        this.errors.clear();\n\n        if (!nutzername) {\n            this.errors.set('nutzername', 'Nutzername darf nicht leer sein!');\n        }\n        if (!email) {\n            this.errors.set('email', 'Email darf nicht leer sein!');\n        }\n        if (!this.emailIsValid(email)) {\n            this.errors.set('email', 'Fehlerhaftes Email Format!');\n        }\n        if (passwort.length < 6) {\n            this.errors.set('passwort', 'Passwort muss mindestens 6 Zeichen besitzen!');\n        }\n        if (!passwort) {\n            this.errors.set('passwort', 'Passwort darf nicht leer sein!');\n        }\n        if (passwort !== this.passwortConfirm) {\n            this.errors.set('passwortConfirm', 'Passwörter stimmen nicht überein!');\n        }\n\n        if (this.errors.size === 0) {\n            if (this.authService.getUser()) {\n                if (this.todoService.todos.length > 0) {\n                    await this.todoService.presentAlertImportTodos();\n                }\n                this.authService.isLoggedIn = true;\n                this.todoService.refreshTodos();\n            }\n            await this.authService.signUp(nutzername, email, passwort, () => {});\n            await this.storageService.importToFirebase(StorageServiceService.parsStringToObjectArray(this.authService.user.todos));\n        }\n    }\n\n    /**\n     * Checks if the given String, in this case an E-Mail, has all necessary Symbols, which have to be used.\n     *\n     * @param email is the given String, the users E-Mail.\n     */\n    emailIsValid(email: string) {\n        return /\\S+@\\S+\\.\\S+/.test(email);\n    }\n\n    /**\n     * Redirects the User to the login-page.\n     */\n    redirectToLogin() {\n        this.router.navigate(['/login']);\n    }\n\n    /**\n     * sets the focus on the email input\n     */\n    ionViewDidEnter() {\n        setTimeout(() => this.nutzernameRef.setFocus(), 10);\n    }\n\n}\n"],"sourceRoot":"webpack:///"}