{"version":3,"sources":["./src/app/pages/home/home.page.html","./src/app/pages/home/home-routing.module.ts","./src/app/pages/home/home.module.ts","./src/app/pages/home/home.page.scss","./src/app/pages/home/home.page.ts"],"names":[],"mappings":"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","file":"pages-home-home-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button></ion-back-button>\\n        </ion-buttons>\\n        <ion-title>Aufgaben Manager KMS</ion-title>\\n        <ion-button *ngIf=\\\"authService.isLoggedIn\\\" slot=\\\"end\\\" color=\\\"warning\\\" (click)=\\\"logout()\\\">Logout</ion-button>\\n        <ion-button *ngIf=\\\"!authService.isLoggedIn\\\" slot=\\\"end\\\" (click)=\\\"authService.presentPopoverLogin($event)\\\">Login\\n        </ion-button>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-item>\\n        <ion-input (ionInput)=\\\"doSearch()\\\"\\n                   clearOnEdit=\\\"false\\\"\\n                   color=\\\"warning\\\"\\n                   inputmode=\\\"text\\\"\\n                   placeholder=\\\"ToDo suchen...\\\" required=\\\"true\\\">\\n        </ion-input>\\n\\n        <ion-icon *ngIf=\\\"todoService.filteredAufgabenArray.length < todoService.todos.length\\\"\\n                  name=\\\"close-outline\\\"\\n                  (click)=\\\"clear()\\\"\\n                  color=\\\"warning\\\"\\n                  slot=\\\"end\\\">\\n        </ion-icon>\\n        <ion-icon name=\\\"search-outline\\\"\\n                  color=\\\"warning\\\"\\n                  slot=\\\"end\\\">\\n        </ion-icon>\\n\\n    </ion-item>\\n    <ion-item>\\n        <ion-label>Liste nach Kategorie filtern</ion-label>\\n        <ion-select interface=\\\"popover\\\" cancelText=\\\"Dismiss\\\" [(ngModel)]=\\\"this.todoService.filterCat\\\" placeholder=\\\"Filter wÃ¤hlen...\\\" (ionChange)=\\\"this.filterByCat(todoService.filterCat)\\\">\\n            <ion-select-option *ngFor=\\\"let cat of todoService.categories\\\" [value]=\\\"cat.name\\\">{{cat.name}}</ion-select-option>\\n            <ion-select-option [value]=\\\"\\\">kein Filter</ion-select-option>\\n        </ion-select>\\n    </ion-item>\\n    <ion-list>\\n        <ion-list-header *ngIf=\\\"!authService.isLoggedIn\\\">\\n            ToDos\\n        </ion-list-header>\\n\\n        <ion-list-header *ngIf=\\\"authService.isLoggedIn\\\">\\n            ToDos von {{authService.user.nutzername}}\\n        </ion-list-header>\\n\\n        <div *ngIf=\\\"todoService.filteredAufgabenArray.length > 0 else empty\\\">\\n            <ion-item-sliding *ngFor=\\\"let todo of todoService.filteredAufgabenArray\\\">\\n                <ion-item [disabled]=\\\"todo.erledigt\\\">\\n                    <!--<ion-avatar slot=\\\"start\\\">\\n                        <img alt=\\\"{{todo.autor.nutzername}}\\\" src=\\\"{{todo.autor.profilbild}}\\\">\\n                    </ion-avatar>-->\\n\\n                    <ion-label>\\n                        <h2 [class.done]=\\\"todo.erledigt\\\">{{todo.titel}}</h2>\\n                        <!--                        <h4>{{todo.kategorie}}</h4>-->\\n                        <p>{{todo.beschreibung}}</p>\\n                    </ion-label>\\n\\n                    <ion-badge *ngIf=\\\"todo.kategorie.name != ''\\\"\\n                               (click)=\\\"presentPopoverCategory($event, todo)\\\">{{todo.kategorie.name}}</ion-badge>\\n\\n                    <ion-note slot=\\\"end\\\">\\n                        <!-- {{todo.autor.nutzername}} -->\\n                        {{todo.zeit}} Uhr\\n                    </ion-note>\\n\\n                    <ion-badge slot=\\\"start\\\" color=\\\"none\\\" (click)=\\\"presentPopoverPriority($event, todo)\\\">\\n                        <img [src]=priority[todo.prioritaet] alt=\\\"prio icon\\\">\\n                    </ion-badge>\\n                </ion-item>\\n\\n                <ion-item-options side=\\\"start\\\">\\n\\n                    <ion-item-option *ngIf=\\\"!todo.erledigt\\\" (click)=\\\"todoService.done(todo)\\\" color=\\\"success\\\">\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"checkmark-circle-outline\\\"></ion-icon>\\n                    </ion-item-option>\\n\\n                    <ion-item-option *ngIf=\\\"todo.erledigt\\\" (click)=\\\"todoService.notDone(todo)\\\" color=\\\"warning\\\">\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n                    </ion-item-option>\\n                </ion-item-options>\\n\\n                <ion-item-options side=\\\"end\\\">\\n                    <ion-item-option (click)=\\\"editModal(todo)\\\" color=\\\"warning\\\">\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"create-outline\\\"></ion-icon>\\n                    </ion-item-option>\\n\\n                    <ion-item-option (click)=\\\"todoService.delete(todo)\\\" color=\\\"danger\\\">\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash\\\"></ion-icon>\\n                    </ion-item-option>\\n                </ion-item-options>\\n            </ion-item-sliding>\\n        </div>\\n\\n    </ion-list>\\n    <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n        <ion-fab-button color=\\\"warning\\\" (click)=\\\"addModal()\\\">\\n            <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n        </ion-fab-button>\\n    </ion-fab>\\n\\n</ion-content>\\n\\n<ng-template #empty>\\n    <ion-item-sliding>\\n        <ion-item>\\n            <p>Hier klicken, um ToDo hinzuzufÃ¼gen.</p>\\n            <ion-button (click)=\\\"addModal()\\\" slot=\\\"end\\\">\\n                <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n            </ion-button>\\n        </ion-item>\\n    </ion-item-sliding>\\n</ng-template>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","export default \".modal .modal-wrapper {\\n  background: #222;\\n}\\n\\nion-list-header {\\n  background-color: yellow;\\n  color: black;\\n}\\n\\n.done {\\n  text-decoration: line-through;\\n}\\n\\nimg {\\n  height: 15px;\\n  width: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvaG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0FBQ0Y7O0FBRUE7RUFDRSx3QkFBQTtFQUNBLFlBQUE7QUFDRjs7QUFFQTtFQUNFLDZCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxZQUFBO0VBQ0EsV0FBQTtBQUNGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvaG9tZS9ob21lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RhbCAubW9kYWwtd3JhcHBlciB7XG4gIGJhY2tncm91bmQ6ICMyMjI7XG59XG5cbmlvbi1saXN0LWhlYWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4uZG9uZSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xufVxuXG5pbWcge1xuICBoZWlnaHQ6IDE1cHg7XG4gIHdpZHRoOiAxNXB4O1xufVxuIl19 */\";","import {Component, ViewChild} from '@angular/core';\nimport {IonInput, LoadingController, ModalController, PopoverController, ViewDidEnter} from '@ionic/angular';\nimport {AddPage} from '../add/add.page';\nimport {AuthService} from '../../../services/auth/auth.service';\nimport {TodoService} from '../../../services/todo/todo.service';\nimport {Todo} from '../../../models/todo';\nimport {PopoverPriorityComponent} from '../../components/popover-priority/popover-priority.component';\nimport {PopoverCategoryPage} from '../../components/popover-category/popover-category.page';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.page.html',\n    styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements ViewDidEnter {\n    loading = this.loadingController.create({\n        message: 'Bitte warten...',\n        duration: 1500\n    });\n    priority = [\n        '../../../assets/prio/highest-prio.svg',\n        '../../../assets/prio/high-prio.svg',\n        '../../../assets/prio/medium.svg',\n        '../../../assets/prio/low-prio.svg',\n        '../../../assets/prio/lowest-prio.svg'];\n    @ViewChild(IonInput) search: IonInput;\n\n    constructor(private modalCtrl: ModalController,\n                public loadingController: LoadingController,\n                public popoverController: PopoverController,\n                public todoService: TodoService,\n                public authService: AuthService) {\n        if (!localStorage.getItem('userID')) {\n            this.authService.isLoggedIn = false;\n            this.todoService.refreshCategories();\n            // this.router.navigate(['/login']);\n        } else {\n            authService.findById(localStorage.getItem('userID'))\n                .subscribe(u => {\n                    authService.user = u;\n                    this.authService.isLoggedIn = true;\n                    this.todoService.refreshTodos();\n                    this.todoService.refreshCategories();\n                });\n        }\n    }\n\n    async addModal() {\n        const modal = await this.modalCtrl.create({\n            component: AddPage,\n            cssClass: 'modal',\n            swipeToClose: true,\n            componentProps: {\n                todo: new Todo(),\n                autor: this.authService.user\n            }\n        });\n        return await modal.present();\n    }\n\n    async editModal(todo: Todo) {\n        const modal = await this.modalCtrl.create({\n            component: AddPage,\n            cssClass: 'modal',\n            swipeToClose: true,\n            componentProps: {\n                edit: true,\n                todo\n            }\n        });\n        return await modal.present();\n    }\n\n    async logout() {\n        await (await this.loading).present();\n        await this.authService.logOut();\n        setTimeout(() => {\n            this.todoService.refreshTodos();\n        }, 1000);\n        await (await this.loading).onDidDismiss();\n    }\n\n    async doSearch() {\n        const input = await this.search.getInputElement();\n        const searchValue = input.value;\n        this.todoService.filteredAufgabenArray = this.todoService.todos.filter(t => {\n            return t.titel.toLowerCase().includes(searchValue.toLowerCase()) ||\n                t.beschreibung.toLowerCase().includes(searchValue.toLowerCase()) ||\n                t.kategorie.name.toLowerCase().includes(searchValue.toLowerCase());\n        });\n    }\n\n    async filterByCat(catname: string) {\n        if (catname === 'no filter') {\n            this.todoService.filteredAufgabenArray = this.todoService.todos;\n        } else {\n            this.todoService.filteredAufgabenArray = this.todoService.todos.filter(t => {\n                return t.kategorie.name === catname;\n            });\n        }\n    }\n\n    async presentPopoverPriority(ev: any, toto: Todo) {\n        const popover = await this.popoverController.create({\n            component: PopoverPriorityComponent,\n            event: ev,\n            translucent: true,\n            componentProps: {\n                toto\n            }\n        });\n        return await popover.present();\n    }\n\n\n    /**\n     * Method that calls the popover to display the elements of categories array\n     * to select an alternative category for a task\n     * @param ev that occurs when popover is called upon\n     * @param task is an instance of the todo class\n     * that is passed to the popover page\n     */\n    async presentPopoverCategory(ev: any, task: Todo) {\n        const popover = await this.popoverController.create({\n            component: PopoverCategoryPage,\n            event: ev,\n            translucent: true,\n            componentProps: {\n                task\n            }\n        });\n        return await popover.present();\n    }\n\n    clear() {\n        this.search.value = '';\n        this.todoService.filteredAufgabenArray = this.todoService.todos;\n    }\n\n    ionViewDidEnter() {\n        this.search.value = '';\n    }\n}\n"],"sourceRoot":"webpack:///"}